#pragma once
#include <memory>
#include <list>
class Input;
class Scene;
/// <summary>
/// シーンを内部に保持し、切り替えを提供する
/// </summary>
class SceneController
{
private:
	//現在スタックに積まれているシーン
	//最後に積んだものだけがUpdateされる
	std::list<std::shared_ptr<Scene>> scenes_;
public:
	/// <summary>
	/// シーンの切り替え(ただし、引数で渡されたシーンのみになる
	/// </summary>
	/// <param name="scene">新しいシーン</param>
	/// <note>引数で渡されたシーンのみになり、積まれてるシーンの数は１つになる</note>
	void ResetScene(std::shared_ptr<Scene> scene);

	/// <summary>
	/// シーンの切り替え
	/// </summary>
	/// <param name="scene">新しいシーン</param>
	/// <note>最後に積んだシーンがChangeされる</note>
	void ChangeScene(std::shared_ptr<Scene> scene);

	/// <summary>
	/// シーンを新しく積みます
	/// </summary>
	/// <param name="scene">積みたいシーン</param>
	/// <note>ChangeSceneと違って、もともと積まれてるシーンは残り続ける</note>
	void PushScene(std::shared_ptr<Scene> scene);

	/// <summary>
	/// 最後に積んだシーンをリストから外す(自動的に解放される)
	/// </summary>
	void PopScene();

	/// <summary>
	/// 内部に持ってるシーンのUpdateを呼び出す
	/// </summary>
	void Update(Input& input);


	/// <summary>
	/// 内部に持ってるシーンのDrawを呼び出す
	/// </summary>
	void Draw();
};

